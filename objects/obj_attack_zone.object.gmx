<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bullet_fancy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///local vars

event_inherited();

//movement
speed = 20;
direction = 0;

//attack
hpMax = 200;
hp = hpMax;
damage = 0;

//grid
gridSizeImpact = 7;
gridSizeRadius = 36;

spriteCreated = false;
spriteSurface = -1;
sprite = -1;
alarm[0] =10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//new sprite
alarm[0] = 10;
spriteCreated = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check if near room border


if(!point_in_rectangle(x,y,16,16,room_width-16,room_height-16)){
    instance_destroy();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///grid interactions

//damage from grid
if(point_in_rectangle(x,y,0,0,room_width,room_height)){
    
    //set the grid objects
    for(var i = -gridSizeImpact; i&lt;=gridSizeImpact; i++){
        for(var j = -gridSizeImpact; j&lt;=gridSizeImpact; j++){
        
            if((x div obj_game_controller.gridSize)+i&gt;=0 and (x div obj_game_controller.gridSize)+i&lt;obj_game_controller.gridWidth and
                (y div obj_game_controller.gridSize)+j&gt;=0 and (y div obj_game_controller.gridSize)+j&lt;obj_game_controller.gridHeight){
                
                
                if(obj_game_controller.grid[(x div obj_game_controller.gridSize)+i,(y div obj_game_controller.gridSize)+j]!=player){
                    with(instance_create(x+(i*obj_game_controller.gridSize),y+(j*obj_game_controller.gridSize),obj_grid_interact)){
                        if(point_distance(other.x,other.y,x,y)&lt;other.gridSizeRadius){
                            other.hp--;
                        }
                        instance_destroy();
                    }
                }
                
                
            }
        

        }
    }
    
}

//destroy if out of health
if (hp &lt;= 0){
    instance_destroy();
}

image_alpha = hp/hpMax;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw self

if(!spriteCreated){
    var spriteSurface = surface_create(24,8);
    
    surface_set_target(spriteSurface);
    draw_clear_alpha(c_black,0);

    //head
    draw_sprite_part(sprite_index,0,24,choose(0,1,2,3)*8,8,8,16,0);
    
    //body
    draw_sprite_part(sprite_index,0,16,choose(0,1,2,3)*8,8,8,8,0);
    
    //tail
    draw_sprite_part(sprite_index,0,choose(0,1)*8,choose(0,1,2,3)*8,8,8,0,0);
    
    surface_reset_target();
    
    sprite = sprite_create_from_surface(spriteSurface,0,0,24,8,true,false,24,4);
    
    surface_free(spriteSurface);
    
    spriteCreated = true;
}
    
draw_sprite_ext(sprite,0,x,y,2,2,direction,image_blend,image_alpha);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
