<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///vars

//background surface
global.backgroundSurface = -1;
menuSurface = -1;

//colors
colors();

//menu

menuTitle = "Lux Tenebris";

menuText[0] = "play";
menuText[1] = "tutorial";
menuText[2] = "quit";
menuAmount = 3;
for(var i = 0;i&lt;menuAmount; i++){
    menuHover[i] = false;
}


//debug
debug = false;


//base spawn
spawnBasePosition = 256;
spawnPlayerPosition = 256;

//player object
global.playerObject[player_dark] = -1;
global.playerObject[player_light] = -1;

//bases
instance_create(spawnBasePosition,room_height/2,obj_base_light);
instance_create(room_width-spawnBasePosition,room_height/2,obj_base_dark);

//depth
depth = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shortcuts

///Shortcuts
if(keyboard_check_pressed(vk_escape)){
    game_end();
}
if(keyboard_check_pressed(vk_enter)){
    game_restart();
}
if(keyboard_check_pressed(vk_space)){
    show_debug_overlay(true);
}

if(keyboard_check_pressed(vk_tab)){
    debug = !debug;
}

//menu clicks
event_user(0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///menu clicks

for(var i = 0; i&lt;menuAmount; i++){
    draw_set_color(c_black);
    menuHover[i] = point_in_rectangle(mouse_x,mouse_y,(room_width/2)-256-(8*menuHover[i]),512+(256*i)-48-(8*menuHover[i]),(room_width/2)+256+(8*menuHover[i]),512+(256*i)+48+(8*menuHover[i]));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///free surface (prevent memory leaks)
surface_free(global.backgroundSurface);
surface_free(menuSurface);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw gui
draw_text_formatting(c_red,fa_left,fa_middle,font_default);
draw_text(16,16,fps);
draw_text(16,32,instance_number(all));





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///background and gui
if(!surface_exists(global.backgroundSurface)){
    global.backgroundSurface = surface_create(room_width,room_height);
    draw_clear_alpha(c_black,0);
    
    surface_set_target(global.backgroundSurface);
    
    //background flipped intentionally(due to blend flipping back)
    draw_set_color(global.colorBackground[player_dark]);
    draw_rectangle(0,0,room_width/2,room_height,false);
    
    draw_set_color(global.colorBackground[player_light]);
    draw_rectangle(room_width/2,0,room_width,room_height,false);

    surface_reset_target();
    
}
else{
    draw_surface(global.backgroundSurface,0,0);
}


//gui setup
if(!surface_exists(menuSurface)){
    menuSurface = surface_create(room_width,room_height);
    surface_set_target(menuSurface);
    draw_clear_alpha(c_white,1);
    surface_reset_target();
    
}
else{
    //drawing gui surface
    surface_set_target(menuSurface);
    draw_clear_alpha(c_white,1);
    
    //title
    draw_text_formatting(c_black,fa_center,fa_middle,font_neuro_large);
    draw_text(room_width/2,256,menuTitle);
    
    //menu items
    draw_text_formatting(c_black,fa_center,fa_middle,font_neuro_medium);
    for(var i = 0; i&lt;menuAmount; i++){
        draw_set_color(c_black);
        draw_roundrect_ext((room_width/2)-256-(8*menuHover[i]),512+(256*i)-48-(8*menuHover[i]),(room_width/2)+256+(8*menuHover[i]),512+(256*i)+48+(8*menuHover[i]),16+(8*menuHover[i]),16+(8*menuHover[i]),false);
        draw_set_color(c_white);
        draw_text(room_width/2,512+(256*i),menuText[i]);
    }
    
    
    
    surface_reset_target();
    
    //draw gui surface to application surface
    draw_set_blend_mode_ext(bm_inv_dest_color, bm_inv_src_colour);
    draw_surface(menuSurface,0,0);
    draw_set_blend_mode(bm_normal);

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
