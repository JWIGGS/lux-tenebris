<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///player variables

//player
player = player_light;

//movement
spdMax = 8;
spdMaxChange = 2;

speed = spdMax;

//bullet
bulletObject = obj_attack_bullet;
bulletEnergy = 1.75;

//bomb
bombObject = obj_attack_bomb;
bombEnergy = 3;

//speed
dashSpd = 16;
dashEnergy = .12;

//health
hp = 1;

//invuln
invulnerabilityTime = 60;
alarm[0] = invulnerabilityTime;

//energy
energyMax = 6;
energy = energyMax;
energyDelta = .075;

//killstreaks
killstreak = 0;
killstreakParticle = 0;

//pulse
pulseAngle = 0;
pulseDelta = pi/16;
pulseMultiplier = .2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///invulnerability timer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///user events

//movement
event_user(0);

//particles
event_user(1);

//bullet attack
event_user(2);

//bomb attack
event_user(3);

//dash ability
event_user(4);

//???ability
event_user(5);

//energy
event_user(6);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_attack_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collision with attack
if(other.player!=player){
    
    //take damage if not invulnerable
    if(alarm[0] =-1){
        hp -= other.damage;
    }
    
    //destroy other attack
    other.hp = 0;
}


if(hp &lt;= 0){

    //respawn timer
    obj_game_controller.alarm[player] = global.respawnTime;
    
    //death sound
    audio_sound_pitch(audio_play_sound(snd_player_death,1,false),.85+(.3*player));
    
    //give other player full energy
    if(instance_exists(global.playerObject[1-player])){
        with(global.playerObject[1-player]){
            energy = energyMax;
            killstreak ++;
        }
    }
    
    //death particles
    direction = other.direction;
    
    
    repeat(300+(killstreakParticle*50)){
        with(instance_create(x,y,obj_particle_player_death)){
            image_blend = global.colorPlayer[other.player];
            direction = other.direction+random_range(-30,30);
        }
    }
    
    //screen shake
    obj_view_controller.shake = obj_view_controller.shakeMax;
    
    //set global player to null
    global.playerObject[player] = -1;
    
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///energy regen

if(global.grid[x div global.gridSize,y div global.gridSize] = player){
    energy = clamp(energy+energyDelta,0,energyMax);
}
else{
    energy = clamp(energy+(energyDelta)/2,0,energyMax);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///special ability
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///dash ability and max speed

if( (gamepad_button_check(player,gp_shoulderr) or gamepad_button_check(player,gp_face3)) and energy - dashEnergy&gt;0){
        
    energy -= dashEnergy;
    speed = dashSpd;

}
else{
    speed = spdMax;
    
}

if(global.grid[x div global.gridSize,y div global.gridSize]!=player){
    speed -= spdMaxChange;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///bomb attack 

if(gamepad_button_check_pressed(player,gp_face2) and energy - bombEnergy&gt;0 ){
    var canFire = true;
    if(instance_exists(obj_attack_bomb)){
        with(obj_attack_bomb){
            if(player = other.player){
                canFire = false;
            }
        }
    }
    if(canFire){
        
        energy -= bombEnergy;
        
        audio_sound_pitch(audio_play_sound(snd_bomb,1,false),.85+(.3*player));
    
        with(instance_create(x,y,bombObject)){
            
            player = other.player;
        
            direction = other.direction;
            image_angle = other.direction-90;
            image_blend = global.colorPlayer[player];
            
            
        }
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///bullet attack 
var fire = false;
if(gamepad_button_check_pressed(player,gp_face1) and energy - bulletEnergy&gt;0){
      fire = true;  
}
if(gamepad_button_check(player,gp_face1) and energy = energyMax){
      fire = true;  
}

if(fire){
    energy -= bulletEnergy;
    
    audio_sound_pitch(audio_play_sound(snd_bullet,1,false),.85+(.3*player));
    
    with(instance_create(x,y,bulletObject)){
        
        player = other.player;
    
        direction = other.direction;
        image_angle = other.direction-90;
        image_blend = global.colorPlayer[player];
        
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///particles trail and pulse (effects)
killstreakParticle = clamp(killstreak,0,5);
repeat(round((speed/2)) +(killstreakParticle*4)){
    with(instance_create(x+random_range(-6,6),y+random_range(-6,6),obj_particle_player)){
        image_blend = global.colorPlayer[other.player];
        direction = other.direction-180;
    }
}

//pulse
pulseDelta = speed/50;
pulseAngle += pulseDelta;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movement

//change speed variables


if(gamepad_axis_value(player,gp_axislh)!=0 and gamepad_axis_value(player,gp_axislv)!=0){
    direction = round(point_direction(0,0,gamepad_axis_value(player,gp_axislh),gamepad_axis_value(player,gp_axislv)));
}
else if(gamepad_axis_value(player,gp_axisrh)!=0 and gamepad_axis_value(player,gp_axisrv)!=0){
    direction = round(point_direction(0,0,gamepad_axis_value(player,gp_axisrh),gamepad_axis_value(player,gp_axisrv)));
}



//change x and y clamped to stay inside room
x = clamp(x,16,room_width-16);
y = clamp(y,16,room_height-16);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw sprite

//pulse
draw_sprite_ext(spr_player_aura,-1,x,y,1+(sin(pulseAngle)*pulseMultiplier)-(1/12),1+(sin(pulseAngle)*pulseMultiplier)-(1/12),image_angle,global.colorPlayer[player],.2);

//player
draw_sprite_ext(sprite_index,-1,x,y,1,1,image_angle,global.colorPlayer[player],1);

//bar outline
draw_set_alpha(.2);

draw_circle_bar(x,y,36,12,30,30,direction,-120,1,global.colorEnergy[player]);
draw_circle_bar(x,y,36,12,30,30,direction,-120,-1,global.colorEnergy[player]);

//bar
draw_set_alpha(.8);
draw_circle_bar(x,y,36,12,30,round((energy/energyMax)*30),direction,-120,1,global.colorEnergy[player]);
draw_circle_bar(x,y,36,12,30,round((energy/energyMax)*30),direction,-120,-1,global.colorEnergy[player]);


draw_set_alpha(1);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
