<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///player variables

//player
player = player_light;

//movement
spdX = 0;
spdY = 0;
spdDelta = .5;
spdMax = 10;

//target
targetAngle = 0;


//attack
attackObject = obj_attack_bullet;
attackEnergy = 2;

//health
hp = 1;

//invuln
invulnerabilityTime = 60;
alarm[0] = invulnerabilityTime;

//energy
energyMax = 5;
energy = energyMax;
energyDelta = .075;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//invulnerability timer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///user events

//movement
event_user(0);

//tracking
event_user(1);

//attacks
event_user(2);
event_user(3);
event_user(4);
event_user(5);

//health check
event_user(6);

//energy
event_user(7);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_attack">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collision with attack
if(other.player!=player){
    if(alarm[0] =-1){
        hp -= other.damage;
    }
    other.hp = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///energy regen

if(obj_game_controller.grid[x div obj_game_controller.gridSize,y div obj_game_controller.gridSize] = player){
    energy = clamp(energy+energyDelta,0,energyMax);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///no health destroy
if(hp &lt;= 0){
    obj_game_controller.alarm[player] = global.respawnTime;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attack 

if(gamepad_button_check_pressed(player,gp_face1) and energy - attackEnergy&gt;=0){
        
    energy -= attackEnergy;

    with(instance_create(x,y,attackObject)){
        
        player = other.player;
    
        direction = other.targetAngle;
        
        image_angle = other.targetAngle-90;
        
        image_blend = global.colorPlayer[player];
        
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tracking cursor

//nothing here because tracking is in the same direction as your movement(targetAngle)




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movement

//change speed variables


if(gamepad_axis_value(player,gp_axislh)!=0 and gamepad_axis_value(player,gp_axislv)!=0){
    targetAngle = point_direction(0,0,gamepad_axis_value(player,gp_axislh),gamepad_axis_value(player,gp_axislv));
}
if(gamepad_axis_value(player,gp_axisrh)!=0 and gamepad_axis_value(player,gp_axisrv)!=0){
    targetAngle = point_direction(0,0,gamepad_axis_value(player,gp_axisrh),gamepad_axis_value(player,gp_axisrv));
}

spdX = lengthdir_x((spdMax/2)+((spdMax/2)*gamepad_button_check(player,gp_face3)),targetAngle);
spdY = lengthdir_y((spdMax/2)+((spdMax/2)*gamepad_button_check(player,gp_face3)),targetAngle);

//x deceleration if no x axis gamepad movement
if(abs(gamepad_axis_value(player,gp_axislh)) &lt;.2){
    if( abs(spdX)&gt;spdDelta){
        spdX -= spdDelta*sign(spdX);
    }
    else{
        spdX = 0;
    }
}

//y deceleration if no y axis gamepad movement
if(abs(gamepad_axis_value(player,gp_axislv)) &lt;.2){
    if( abs(spdY)&gt;spdDelta){
        spdY -= spdDelta*sign(spdY);
    }
    else{
        spdY = 0;
    }
}


//change x and y clamped to stay inside room
x = clamp(x+spdX,16,room_width-16);
y = clamp(y+spdY,16,room_height-16);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw sprite
draw_sprite_ext(sprite_index,-1,x,y,1,1,targetAngle-90,global.colorPlayer[player],1);

draw_set_color(c_red);
draw_rectangle(x-32,y-24,x-32+(energy*64/energyMax),y-20,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
