<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bomb_explosion</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///local vars
event_inherited();

//movement
speed = 0;
direction = 0;

//attack
hp = 10;//not killed by hp
damage = 0;

//grid
gridSizeImpact = 16;
gridSizeRadius = 32;

x = (x div obj_game_controller.gridSize)*obj_game_controller.gridSize;
y = (y div obj_game_controller.gridSize)*obj_game_controller.gridSize;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///grid interactions

gridSizeRadius+=16;

if(gridSizeRadius&gt;128){
    instance_destroy();
}
image_xscale = (gridSizeRadius/64)+(8/32);
image_yscale = (gridSizeRadius/64)+(8/32);

image_alpha = (1-(gridSizeRadius/128))+.5;


//damage from grid
if(point_in_rectangle(x,y,0,0,room_width,room_height)){
    
    //set the grid objects
    for(var i = -gridSizeImpact; i&lt;=gridSizeImpact; i++){
        for(var j = -gridSizeImpact; j&lt;=gridSizeImpact; j++){
        
            if((x div obj_game_controller.gridSize)+i&gt;=0 and (x div obj_game_controller.gridSize)+i&lt;obj_game_controller.gridWidth and
                (y div obj_game_controller.gridSize)+j&gt;=0 and (y div obj_game_controller.gridSize)+j&lt;obj_game_controller.gridHeight){
                
                
                if(obj_game_controller.grid[(x div obj_game_controller.gridSize)+i,(y div obj_game_controller.gridSize)+j]!=player){
                    with(instance_create(x+(i*obj_game_controller.gridSize),y+(j*obj_game_controller.gridSize),obj_grid_interact)){
                        if(point_distance(other.x-(obj_game_controller.gridSize/2),other.y-(obj_game_controller.gridSize/2),x,y)&gt;other.gridSizeRadius){
                            instance_destroy();
                        }
                        else{
                            player = other.player;
                            
                        }
                    }
                }
                
                
            }
        

        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw
draw_self();

surface_set_target(global.backgroundSurface);
draw_sprite_ext(sprite_index,0,x,y,image_xscale,image_yscale,image_angle,global.colorBackground[player],1);
for(i = 0; i&lt;speed; i++){
    draw_sprite_ext(sprite_index,0,x-lengthdir_x(i,direction),y-lengthdir_y(i,direction),image_xscale,image_yscale,image_angle,global.colorBackground[player],1);
}
surface_reset_target();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
